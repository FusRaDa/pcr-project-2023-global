# Generated by Django 4.2.6 on 2023-11-03 16:04

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    dependencies = [
        ('pcr', '0002_assay_controls_assay_reagents'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='reagent',
            name='lot_catalog_number_unique',
        ),
        migrations.RenameField(
            model_name='sample',
            old_name='assay',
            new_name='assays',
        ),
        migrations.AddField(
            model_name='sample',
            name='assay_name',
            field=models.CharField(blank=True, max_length=25),
        ),
        migrations.AlterField(
            model_name='assay',
            name='name',
            field=models.CharField(max_length=25),
        ),
        migrations.AlterField(
            model_name='assaylist',
            name='name',
            field=models.CharField(max_length=25),
        ),
        migrations.AlterField(
            model_name='batch',
            name='assay_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='pcr.assaylist'),
        ),
        migrations.AlterField(
            model_name='batch',
            name='extraction_protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='pcr.extractionprotocol'),
        ),
        migrations.AlterField(
            model_name='batch',
            name='lab_id',
            field=models.CharField(max_length=5),
        ),
        migrations.AlterField(
            model_name='batch',
            name='name',
            field=models.CharField(max_length=25),
        ),
        migrations.AlterField(
            model_name='control',
            name='name',
            field=models.CharField(max_length=25),
        ),
        migrations.AlterField(
            model_name='flourescence',
            name='name',
            field=models.CharField(max_length=25),
        ),
        migrations.AlterField(
            model_name='plate',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='pcr.thermalcyclerprotocol'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='lab_id_num',
            field=models.CharField(max_length=10),
        ),
        migrations.AlterField(
            model_name='sample',
            name='sample_id',
            field=models.CharField(blank=True, max_length=25),
        ),
        migrations.AddConstraint(
            model_name='assay',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('name'), name='assay_unique', violation_error_message='An assay with this name already exists.'),
        ),
        migrations.AddConstraint(
            model_name='assaylist',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('name'), name='assay_list_unique', violation_error_message='An assay list/group with this name already exists.'),
        ),
        migrations.AddConstraint(
            model_name='batch',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('lab_id'), name='batch_unique', violation_error_message='A batch with this lab ID already exists.'),
        ),
        migrations.AddConstraint(
            model_name='control',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('lot_number'), name='control_unique', violation_error_message='A control with this lot number already exists.'),
        ),
        migrations.AddConstraint(
            model_name='extractionprotocol',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('name'), name='extraction_protocol_unique', violation_error_message='An extraction protocol with this name already exists.'),
        ),
        migrations.AddConstraint(
            model_name='flourescence',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('name'), name='flourescence_unique', violation_error_message='Flourescense with this name already exists.'),
        ),
        migrations.AddConstraint(
            model_name='reagent',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('lot_number'), django.db.models.functions.text.Lower('catalog_number'), name='reagent_unique', violation_error_message='A reagent with the same lot and catalog number already exists.'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('lab_id_num'), name='sample_unique', violation_error_message='A batch with this lab ID already exists.'),
        ),
        migrations.AddConstraint(
            model_name='thermalcyclerprotocol',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('user'), django.db.models.functions.text.Lower('name'), name='thermal_cycler_protocol_unique', violation_error_message='A protocol with this name already exists.'),
        ),
    ]
