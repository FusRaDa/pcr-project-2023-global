# Generated by Django 4.2.6 on 2023-12-07 20:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('method', models.CharField(choices=[('qPCR', 'qPCR'), ('PCR', 'PCR')], default='PCR', max_length=25)),
                ('type', models.CharField(choices=[('DNA', 'DNA'), ('RNA', 'RNA')], default='DNA', max_length=25)),
                ('sample_volume', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('reaction_volume', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='AssayCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('number_of_samples', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('lab_id', models.CharField(max_length=5)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('lot_number', models.CharField(max_length=25)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_negative_ctrl', models.BooleanField(default=False)),
                ('exp_date', models.DateField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExtractionProtocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('type', models.CharField(choices=[('DNA', 'DNA'), ('RNA', 'RNA'), ('TOTAL_NUCLEIC', 'Total Nucleic')], default='DNA', max_length=25)),
                ('doc_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fluorescence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Plate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('brand', models.CharField(blank=True, max_length=25)),
                ('lot_number', models.CharField(max_length=25)),
                ('catalog_number', models.CharField(max_length=25)),
                ('size', models.IntegerField(choices=[(8, '8'), (24, '24'), (48, '48'), (96, '96'), (384, '384')], default=96)),
                ('amount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('exp_date', models.DateField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessPlate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('DNA', 'DNA'), ('RNA', 'RNA')], default='DNA', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Reagent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('brand', models.CharField(blank=True, max_length=25)),
                ('lot_number', models.CharField(max_length=25)),
                ('catalog_number', models.CharField(max_length=25)),
                ('usage', models.CharField(choices=[('EXTRACTION', 'EXTRACTION'), ('PCR', 'PCR')], default='PCR', max_length=25)),
                ('pcr_reagent', models.CharField(blank=True, choices=[('GENERAL', 'GENERAL'), ('POLYMERASE', 'POLYMERASE'), ('WATER', 'WATER')], default=None, max_length=25, null=True)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_volume', models.CharField(choices=[('L', 'L'), ('mL', 'mL'), ('µL', 'µL')], default='µL', max_length=25)),
                ('stock_concentration', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_concentration', models.CharField(blank=True, choices=[('M', 'M'), ('mM', 'mM'), ('µM', 'µM'), ('nM', 'nM'), ('U/µL', 'U/µL'), ('X', 'X')], default=None, max_length=25, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('exp_date', models.DateField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReagentAssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_concentration', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('final_concentration_unit', models.CharField(blank=True, choices=[('MOLES', 'M'), ('MILLIMOLES', 'mM'), ('MICROMOLES', 'µM'), ('NANOMOLES', 'nM'), ('UNITS', 'U/µL'), ('X', 'X')], default=None, max_length=25, null=True)),
                ('order', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='ReagentExtraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('amount_per_sample', models.DecimalField(decimal_places=2, default=1, max_digits=12, validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_id_num', models.CharField(max_length=10)),
                ('sample_id', models.CharField(blank=True, max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ThermalCyclerProtocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('denature_temp', models.DecimalField(decimal_places=2, max_digits=12)),
                ('denature_duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('anneal_temp', models.DecimalField(decimal_places=2, max_digits=12)),
                ('anneal_duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('extension_temp', models.DecimalField(decimal_places=2, max_digits=12)),
                ('extension_duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('number_of_cycles', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Tube',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('brand', models.CharField(blank=True, max_length=25)),
                ('lot_number', models.CharField(max_length=25)),
                ('catalog_number', models.CharField(max_length=25)),
                ('amount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('exp_date', models.DateField(blank=True, default=None, null=True)),
                ('location', models.ManyToManyField(to='pcr.location')),
            ],
        ),
        migrations.CreateModel(
            name='TubeExtraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('amount_per_sample', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pcr.extractionprotocol')),
                ('tube', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pcr.tube')),
            ],
        ),
    ]
