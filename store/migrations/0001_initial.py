# Generated by Django 4.2.6 on 2023-12-11 02:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('logo', models.ImageField(upload_to='static/images')),
                ('is_affiliated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Kit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('catalog_number', models.CharField(max_length=25, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('affiliate_link', models.URLField()),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.brand')),
            ],
        ),
        migrations.CreateModel(
            name='KitOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_ordered', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.kit')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoreTube',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('amount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.kit')),
            ],
        ),
        migrations.CreateModel(
            name='StoreReagent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('usage', models.CharField(choices=[('EXTRACTION', 'EXTRACTION'), ('PCR', 'PCR')], default='PCR', max_length=25)),
                ('pcr_reagent', models.CharField(blank=True, choices=[('GENERAL', 'GENERAL'), ('POLYMERASE', 'POLYMERASE'), ('WATER', 'WATER')], default=None, max_length=25, null=True)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_volume', models.CharField(choices=[('L', 'L'), ('mL', 'mL'), ('µL', 'µL')], default='µL', max_length=25)),
                ('stock_concentration', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_concentration', models.CharField(blank=True, choices=[('M', 'M'), ('mM', 'mM'), ('µM', 'µM'), ('nM', 'nM'), ('U/µL', 'U/µL'), ('X', 'X')], default=None, max_length=25, null=True)),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.kit')),
            ],
        ),
        migrations.CreateModel(
            name='StorePlate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('size', models.IntegerField(choices=[(8, '8'), (24, '24'), (48, '48'), (96, '96'), (384, '384')], default=96)),
                ('amount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.kit')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('has_ordered', models.BooleanField(default=False)),
                ('kit', models.ManyToManyField(through='store.KitOrder', to='store.kit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='kitorder',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order'),
        ),
        migrations.AddField(
            model_name='kit',
            name='tags',
            field=models.ManyToManyField(to='store.tag'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=25)),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('brand', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.brand')),
            ],
        ),
        migrations.AddConstraint(
            model_name='kit',
            constraint=models.UniqueConstraint(fields=('brand', 'catalog_number'), name='kit_unique', violation_error_message='A kit with the same brand and catalog number already exists.'),
        ),
    ]
